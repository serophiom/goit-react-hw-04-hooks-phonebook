{"version":3,"sources":["FormAddContacts/FormAddContacts.js","Contacts/Contacts.js","Filter/Filter.js","Phonebook/Phonebook.js","App.js","index.js"],"names":["FormAddContacts","onSubmit","useState","name","setName","number","setNumber","handleChange","event","target","value","reset","preventDefault","className","type","pattern","title","required","onChange","Contacts","contacts","showContacts","onDeleteContact","map","id","onClick","Filter","change","filter","length","currentTarget","Phonebook","JSON","parse","window","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","toLowerCase","contact","includes","alreadyAddedContact","find","alert","uuidv4","contactId","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25a4c7b5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './FormAddContacts.css';\r\n\r\nexport default function FormAddContacts({ onSubmit }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n\r\n        // setName(event.currentTarget.value);\r\n\r\n        // const { name, value } = event.currentTarget;\r\n        // this.setState({\r\n        //     [name]: value\r\n        // });\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        onSubmit(name, number);\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n       setName('');\r\n       setNumber('');\r\n    };\r\n\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"input-form\">\r\n                <label>\r\n                    Name<input\r\n                    className=\"add-input\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                /> \r\n                </label>\r\n                <label>\r\n                    Number<input\r\n                    className=\"add-input\"\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <button className=\"btn-add\" type=\"submit\">Add contact</button>\r\n            </div>  \r\n            </form>\r\n        );\r\n}\r\n\r\n// class FormAddContacts extends Component {\r\n//     state = {\r\n//         name: '',\r\n//         number: ''\r\n//     };\r\n\r\n//     handleChange = event => {\r\n//         const { name, value } = event.currentTarget;\r\n//         this.setState({\r\n//             [name]: value\r\n//         });\r\n//     };\r\n\r\n//     handleSubmit = event => {\r\n//         event.preventDefault();\r\n//         this.props.onSubmit(this.state);\r\n//         this.reset();\r\n//     };\r\n\r\n//     reset = () => {\r\n//         this.setState({ name: '', number: '' });\r\n//     };\r\n\r\n//     render() {\r\n//         return (\r\n//             <form onSubmit={this.handleSubmit}>\r\n//               <div className=\"input-form\">\r\n//                 <label>\r\n//                     Name<input\r\n//                     className=\"add-input\"\r\n//                     type=\"text\"\r\n//                     name=\"name\"\r\n//                     pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//                     title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//                     required\r\n//                     value={this.state.name}\r\n//                     onChange={this.handleChange}\r\n//                 /> \r\n//                 </label>\r\n//                 <label>\r\n//                     Number<input\r\n//                     className=\"add-input\"\r\n//                     type=\"tel\"\r\n//                     name=\"number\"\r\n//                     pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//                     title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n//                     required\r\n//                     value={this.state.number}\r\n//                     onChange={this.handleChange}\r\n//                     />\r\n//                 </label>\r\n\r\n//                 <button className=\"btn-add\" type=\"submit\">Add contact</button>\r\n//             </div>  \r\n//             </form>\r\n//         );\r\n//     };\r\n// }\r\n\r\n// export default FormAddContacts;","import React from 'react';\r\nimport './Contacts.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contacts = ({ contacts, showContacts, onDeleteContact }) => {\r\n    return contacts && (\r\n        <ul>\r\n            {showContacts.map(({ id, name, number }) => (\r\n                <li key={id} className=\"contacts__item\">\r\n                    <p className=\"contacts__text\">{name}: {number}</p>\r\n                    <button onClick={() => onDeleteContact(id)}>delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n    \r\n};\r\n\r\nContacts.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    showContacts: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Filter.css';\r\n\r\nconst Filter = ({ change, filter, contacts }) => {\r\n    function getFilteredName (event) {\r\n        const { value } = event.currentTarget;\r\n        change(value);\r\n    }\r\n\r\n    return contacts.length !== 0 ? (\r\n        <div>\r\n        <label>\r\n            Find contacts by Name<input\r\n            className=\"filter-input\"\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={getFilteredName}\r\n        />\r\n        </label>\r\n        \r\n        </div>\r\n        ) : (\r\n        <p>There is no contacts in your Phonebook</p>\r\n    )\r\n};\r\n\r\nFilter.propTypes = {\r\n    change: PropTypes.func.isRequired,\r\n    filter: PropTypes.string.isRequired,\r\n    contacts: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Filter;","import { useState, useEffect } from 'react';\r\nimport FormAddContacts from '../FormAddContacts/FormAddContacts';\r\nimport Contacts from '../Contacts/Contacts';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Filter from '../Filter/Filter';\r\nimport './Phonebook.css';\r\n\r\nexport default function Phonebook() {\r\n    const [contacts, setContacts] = useState(\r\n        JSON.parse(window.localStorage.getItem('contacts')) ?? [{id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n                {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n                {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n                {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},],\r\n    );\r\n    const [filter, setFilter] = useState('');\r\n\r\n    useEffect (() => {\r\n        window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }, [contacts]);\r\n\r\n    const formSubmitHandler = ( name, number ) => {\r\n        const alreadyAddedContact = contacts.find(contact => contact.name === name);\r\n        if (alreadyAddedContact) {\r\n            alert(`${alreadyAddedContact.name} is already in contacts`);\r\n            return;\r\n        }\r\n        setContacts ([...contacts, { id: uuidv4(), name, number }]);\r\n    };\r\n\r\n    const handleFilter = value => {\r\n        setFilter(value);\r\n    };\r\n\r\n    const deleteContact = (contactId) => {\r\n        setContacts(contacts.filter(contact => contact.id !== contactId));\r\n    };\r\n\r\n    const toLowerCase = filter.toLowerCase();\r\n    const showContacts = contacts.filter(contact =>\r\n         contact.name.toLowerCase().includes(toLowerCase)\r\n    );\r\n\r\n    return (\r\n        <div className=\"phonebook\">\r\n            <h1>Phonebook</h1>\r\n            <FormAddContacts onSubmit={formSubmitHandler}/>\r\n            <h2>Contacts</h2>\r\n            <Filter change={handleFilter} filter={filter} contacts={contacts}/>\r\n            <Contacts contacts={contacts} showContacts={showContacts} onDeleteContact={deleteContact}/>\r\n        </div>\r\n    );\r\n}","import Phonebook from './Phonebook/Phonebook'\n\nconst App = () => {\n  return (\n  \n      <Phonebook />\n    \n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}